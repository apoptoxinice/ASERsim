/*
  PIM for Quagga
  Copyright (C) 2008  Everton da Silva Marques

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; see the file COPYING; if not, write to the
  Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
  MA 02110-1301 USA

  $QuaggaId: $Format:%an, %ai, %h$ $
*/

#ifndef PIM_MSG_H
#define PIM_MSG_H

#include <netinet/in.h>

#include "pimsm_define.h"

typedef u_int32_t   u_int32;
typedef u_int16_t   u_int16;
typedef u_int8_t    u_int8;
#if 0
/*
 *  * Network Order pim_msg_hdr
 *   */
struct pim_msg_header
{
    uint8_t type : 4;
    uint8_t ver : 4;
    uint8_t reserved;
    uint16_t checksum;
};

#endif
struct pim
{
    __u8    pim_ver:4;      /* PIM version */
    __u8    pim_type:4;     /* PIM message type */
    __u8    pim_rsv;        /* Reserved */
    __be16  pim_cksum;      /* Checksum */
};
/*
  Number       Description
  ----------   ------------------
  0            Reserved
  1            IP (IP version 4)
  2            IP6 (IP version 6)

  From:
  http://www.iana.org/assignments/address-family-numbers
*/
#define PIM_MSG_ADDRESS_FAMILY_IPV4 (1)

void pim_msg_build_header(uint8_t *pim_msg, int pim_msg_size,
                          uint8_t pim_msg_type);
uint8_t *pim_msg_addr_encode_ipv4_ucast(uint8_t *buf,
                                        int buf_size,
                                        struct in_addr addr);
uint8_t *pim_msg_addr_encode_ipv4_group(uint8_t *buf,
                                        int buf_size,
                                        struct in_addr addr);
uint8_t *pim_msg_addr_encode_ipv4_source(uint8_t *buf,
        int buf_size,
        struct in_addr addr);


#if INCLUDE_PIMSM
int pim6_cksum(u_int16_t *addr, struct in6_addr *src ,struct in6_addr *dst , int len );
void pimsm_msg_build_header(struct pim *pim, int pim_msg_size,
                            uint8_t pim_msg_type, struct in6_addr *src, struct in6_addr *dst);
#endif
#endif /* PIM_MSG_H */
