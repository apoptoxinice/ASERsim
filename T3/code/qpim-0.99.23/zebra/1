static int
ip_address_install (struct vty *vty, struct interface *ifp,
                    const char *addr_str, const char *peer_str,
                    const char *label)
{
    struct zebra_if *if_data;
    struct prefix_ipv4 cp;
    struct connected *ifc;
    struct prefix_ipv4 *p;
    int ret;

    if(strncmp(ifp->name,"4o6",3)==0||strncmp(ifp->name,"ivi",3)==0||strncmp(ifp->name,"nat",3)==0||strncmp(ifp->name,"6o4",3)==0||strncmp(ifp->name,"ip",2)==0)
    {
        vty_out (vty, "%% Can't set interface IP address"
                );
        return CMD_ERR_NOTHING_TODO;
    }
    if_data = ifp->info;

    ret = str2prefix_ipv4 (addr_str, &cp);
    if (ret <= 0)
    {
        vty_out (vty, "%% Malformed address %s", VTY_NEWLINE);
        return CMD_WARNING;
    }

    ifc = connected_check (ifp, (struct prefix *) &cp);
    if (! ifc)
    {
        ifc = connected_new ();
        ifc->ifp = ifp;

        /* Address. */
        p = prefix_ipv4_new ();
        *p = cp;
        ifc->address = (struct prefix *) p;

        /* Broadcast. */
        if (p->prefixlen <= IPV4_MAX_PREFIXLEN-2)
        {
            p = prefix_ipv4_new ();
            *p = cp;
            p->prefix.s_addr = ipv4_broadcast_addr(p->prefix.s_addr,p->prefixlen);
            ifc->destination = (struct prefix *) p;
        }

        /* Label. */
        if (label)
            ifc->label = XSTRDUP (MTYPE_CONNECTED_LABEL, label);

        /* Add to linked list. */
        listnode_add (ifp->connected, ifc);
    }

    /* This address is configured from zebra. */
    if (! CHECK_FLAG (ifc->conf, ZEBRA_IFC_CONFIGURED))
        SET_FLAG (ifc->conf, ZEBRA_IFC_CONFIGURED);

    /* In case of this route need to install kernel. */
    if (! CHECK_FLAG (ifc->conf, ZEBRA_IFC_QUEUED)
            && CHECK_FLAG (ifp->status, ZEBRA_INTERFACE_ACTIVE)
            && !(if_data && if_data->shutdown == IF_ZEBRA_SHUTDOWN_ON))
    {
        /* Some system need to up the interface to set IP address. */
        if (! if_is_up (ifp))
        {
            if_set_flags (ifp, IFF_UP | IFF_RUNNING);
            if_refresh (ifp);
        }

        ret = if_set_prefix (ifp, ifc);
        if (ret < 0)
        {
            vty_out (vty, "%% Can't set interface IP address: %s.%s",
                     safe_strerror(errno), VTY_NEWLINE);
            return CMD_WARNING;
        }

        SET_FLAG (ifc->conf, ZEBRA_IFC_QUEUED);
        /* The address will be advertised to zebra clients when the notification
         * from the kernel has been received.
         * It will also be added to the subnet chain list, then. */
    }

    return CMD_SUCCESS;
}
